target_default: 3_forecast

include:
  - lib.yml

packages:
  - dplyr
  - tidyr

targets:

  3_forecast:
    depends:
      - 3_forecast/out/inputs.rds.ind

  # Targets prepared in 1_data.yml
  1_data/out/sites_subset.yml:
    command: gd_get('1_data/out/sites_subset.yml.ind', config_file='lib/cfg/gd_config.yml')
  1_data/out/comids.tsv:
    command: gd_get('1_data/out/comids.tsv.ind', config_file='lib/cfg/gd_config.yml')
  1_data/out/site_info.tsv:
    command: gd_get('1_data/out/site_info.tsv.ind', config_file='lib/cfg/gd_config.yml')

  # Targets prepared in 2_munge.yml
  2_munge/out/agg_nwis.rds:
    command: gd_get('2_munge/out/agg_nwis.rds.ind', config_file='lib/cfg/gd_config.yml')
  2_munge/out/agg_nwm.rds:
    command: gd_get('2_munge/out/agg_nwm.rds.ind', config_file='lib/cfg/gd_config.yml')

  # Use 3_forecast_taskmaster.yml to run all the models, then gather up and post
  # the output. When all this is complete, we get back the data file[s] below.
  # We need to go through an intermediate R object (preds_rloadest) if we want this file
  # to ensure that 3_forecast/log/preds_rloadest.rds.ind gets built the first time. I think/hope
  # that after it's built, the recipe for 3_forecast/log/preds_rloadest.rds will notice if the
  # contents change...but this needs some monitoring to see whether I've got it right.
  preds_rloadest:
    command: scmake(I('3_forecast/log/preds_rloadest.rds.ind'), remake_file='3_forecast_taskmaster.yml')
  3_forecast/log/preds_rloadest.rds:
    depends: preds_rloadest
    command: gd_get('3_forecast/log/preds_rloadest.rds.ind', config_file='lib/cfg/gd_config.yml')
