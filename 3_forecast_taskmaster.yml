target_default: 3_forecast

include:
  - 3_forecast.yml

packages:
  - dplyr
  - tidyr
  - survival
  - rloadest

sources:
  - 3_forecast/src/prep_inputs.R
  - 3_forecast/src/define_model_tasks.R
  - 3_forecast/src/apply_loadest.R
  - 3_forecast/src/gather_forecasts.R

targets:

  # prepare destination folders for intermediate output.
  # out folder should already be created & git commited.
  # tmp=temporary folder for holding files to only be created on 1 computer.
  # out=folder to hold .ind and data files corresponding to shared cache or everybody's local build.
  # log=folder for the few indicator files that don't correspond to a data file.
  3_forecast/tmp:
    command: dir.create(target_name, recursive=I(TRUE), showWarnings=I(FALSE))
  3_forecast/log:
    command: dir.create(target_name, recursive=I(TRUE), showWarnings=I(FALSE))
  forecast_folders:
    command: list(
      tmp='3_forecast/tmp',
      log='3_forecast/log')

  # create and execute a task plan for running many combinations of input data,
  # water forecast models, and time windows
  forecast_df:
    command: list_tasks(
      sites_yml='1_data/out/sites_subset.yml.ind',
      remake_file='3_forecast.yml')
  forecast_plan:
    command: plan_forecasts(
      tasks_df=forecast_df, folders=forecast_folders, remake_file='3_forecast.yml')
  3_forecast_tasks.yml:
    command: create_forecast_makefile(makefile=target_name, task_plan=forecast_plan, remake_file='3_forecast.yml')

  # run the data pulls
  task_subset:
    command: c(I("05465500_long1_20170430"), I("07144100_med_20170430"), I("07374000_long1_20170430"))
  3_forecast/log/3_forecast_tasks.ind:
    command: loop_tasks(
      task_plan=forecast_plan, task_makefile='3_forecast_tasks.yml',
      task_names=task_subset,
      step_names=I("forecast_rloadest"),
      num_tries=I(1), sleep_on_error=I(0))

  # gather the data pulls
  3_forecast/log/preds_rloadest.rds.ind:
    depends: 3_forecast/log/3_forecast_tasks.ind
    command: gather_forecasts(
      ind_file=target_name,
      task_df=forecast_df,
      task_plan=forecast_plan,
      load_model=I('rloadest'),
      gd_config='lib/cfg/gd_config.yml')
